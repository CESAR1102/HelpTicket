@model Entity.Ticket
@{
	Layout = "~/Views/Shared/_Layout_Trabajador.cshtml";
	ViewBag.Title = "Login_";

	var departamentos = ViewBag.Departamentos as List<SelectListItem>;
	var topicos = ViewBag.Topicos as List<SelectListItem>;
}

<div class="col-lg-12">
	<div class="card shadow mb-4">
		<div class="card-header">
			<h6 class="m-0 font-weight-bold text-dark">GENERAR TICKET</h6>
		</div>
		<div class="card-body card-block border-bottom-light">

			<form class="signup-form" method="post" action="#">
				@using (Html.BeginForm("SolicitarRecurso", "Ticket", FormMethod.Post, new { @class = "form-group" }))
				{
					<div style="padding-left:100px; padding-right:100px;">
						<h3 style="text-align:center">Solicitar Recurso</h3>
						<br />
						<h4 class="">Departamento </h4>
                        <select id="select_departamentos" class="form-control">
                            @foreach (var i in ViewBag.Departamentos)
                            {
                                <option value=@i.Value>@i.Text</option>
                            }
                        </select>
						<br />
						<br />
						<h4 class="">Topico</h4>
						@Html.DropDownListFor(d => d.topico_id, topicos, new { @class = "form-control", id = "select_topico" })
						@Html.ValidationMessageFor(d => d.topico_id, "", new { @class = "text-danger", @font_size = "1" })
						<br />
						<br />
						<h4 class="">Importancia</h4>
						@Html.DropDownListFor(d => d.importancia, (List<SelectListItem>)ViewBag.Importancia, new { @class = "form-control" })
						@Html.ValidationMessageFor(d => d.importancia, "", new { @class = "text-danger", @font_size = "1" })
						<br />
						<br />
						<h4 class="">Descripcion</h4>
						@Html.TextAreaFor(d => d.descripcion, new { @class = "form-control form-control-user", @placeholder = "Escriba el contenido del ticket ...", id = "descripcionTicket", rows = "7" })
						<p style="text-align:right" id="textContador">0/600</p>
						@Html.ValidationMessageFor(d => d.descripcion, "", new { @class = "text-danger", @font_size = "1" })
						<br />
						<br />
						<input type="submit" value="Crear" class="btn btn-danger btn-user btn-block" />
					</div>
				}
			</form>



		</div>
	</div>
</div>
<script>
	const origen = document.getElementById("select_departamentos");
	const dependiente = document.getElementById("select_topico");
	const testAreaDescripcion = document.getElementById("descripcionTicket");
	const contador = document.getElementById("textContador");


	origen.addEventListener("change", (event) => {
		let url = '/ModuloTrabajador/ObtenerTopicos/' + origen.value;
		fetch(url)
			.then(res => res.json())
			.then((out) => {
				removerTodo();
				for (var i = 0; i < out.length; i++) {
					var option = document.createElement("option");
					option.value = out[i]['Value']
					option.innerHTML = out[i]['Text'];
					dependiente.appendChild(option);
				}
			})
			.catch(err => { throw err });
	});
	function removerTodo() {
		for (let i = dependiente.options.length; i >= 0; i--) {
			dependiente.remove(i);
		}
	}

	testAreaDescripcion.addEventListener("input", (event) => {
		contador.innerText = testAreaDescripcion.value.length + "/600";
	});
</script>
